[{"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\index.js":"1","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\reportWebVitals.js":"2","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\App.js":"3","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\startgame\\startgame.comp.jsx":"4","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\homepage\\homepage.comp.jsx":"5","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\playgame\\playgame.comp.jsx":"6","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\results\\results.comp.jsx":"7","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\components\\header\\header.comp.jsx":"8","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\store.js":"9","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\root-reducer.js":"10","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.reducer.jsx":"11","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.actions.jsx":"12","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.selectors.jsx":"13","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.types.jsx":"14","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.utils.jsx":"15","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.reducer.jsx":"16","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.types.jsx":"17","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.actions.jsx":"18","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.utils.jsx":"19","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\components\\footer\\footer.comp.jsx":"20","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\utils\\constants.jsx":"21"},{"size":812,"mtime":1611504544109,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":657,"mtime":1611333449192,"results":"25","hashOfConfig":"23"},{"size":5494,"mtime":1612458446411,"results":"26","hashOfConfig":"23"},{"size":1051,"mtime":1612454958628,"results":"27","hashOfConfig":"23"},{"size":8856,"mtime":1612553414356,"results":"28","hashOfConfig":"23"},{"size":107,"mtime":1610543213450,"results":"29","hashOfConfig":"23"},{"size":214,"mtime":1610738217816,"results":"30","hashOfConfig":"23"},{"size":440,"mtime":1612439853485,"results":"31","hashOfConfig":"23"},{"size":548,"mtime":1611504862017,"results":"32","hashOfConfig":"23"},{"size":994,"mtime":1612460425415,"results":"33","hashOfConfig":"23"},{"size":924,"mtime":1612459361651,"results":"34","hashOfConfig":"23"},{"size":268,"mtime":1611411150207,"results":"35","hashOfConfig":"23"},{"size":401,"mtime":1612459413023,"results":"36","hashOfConfig":"23"},{"size":2819,"mtime":1612460128517,"results":"37","hashOfConfig":"23"},{"size":951,"mtime":1612460979162,"results":"38","hashOfConfig":"23"},{"size":212,"mtime":1612460562604,"results":"39","hashOfConfig":"23"},{"size":479,"mtime":1612461137742,"results":"40","hashOfConfig":"23"},{"size":362,"mtime":1612460869148,"results":"41","hashOfConfig":"23"},{"size":696,"mtime":1612435402776,"results":"42","hashOfConfig":"23"},{"size":480,"mtime":1612553026245,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1q9t6f0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\index.js",[],["92","93"],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\reportWebVitals.js",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\App.js",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\startgame\\startgame.comp.jsx",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport lodash from \"lodash\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  updatePlayerName,\r\n  addPlayers,\r\n} from \"../../redux/player/player.actions\";\r\n\r\nimport { setInitialRound, resetState } from \"../../redux/game/game.actions\";\r\n\r\nimport Header from \"../../components/header/header.comp\";\r\n\r\nimport \"./startgame.styles.css\";\r\n\r\nconst StartGame = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updatePlayerName([]));\r\n    dispatch(resetState());\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const [playerCount, setPlayerCount] = useState();\r\n\r\n  const [countSubmitted, setCountSubmitted] = useState(false);\r\n\r\n  const [isInputError, setIsInputError] = useState(false);\r\n\r\n  const [inputErrorMessage, setInputErrorMessage] = useState(\"\");\r\n\r\n  const players = useSelector((state) => state.players);\r\n\r\n  const handleCountInput = (event) => {\r\n    setIsInputError(false);\r\n    if (countSubmitted) {\r\n      dispatch(updatePlayerName([]));\r\n      setCountSubmitted(false);\r\n    }\r\n    const { value } = event.target;\r\n    setPlayerCount(value);\r\n  };\r\n\r\n  const handleCountSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isNaN(playerCount)) {\r\n      setIsInputError(true);\r\n      setInputErrorMessage(\"Please enter a >1 numeric value\");\r\n      setPlayerCount(\"\");\r\n      return;\r\n    } else if (playerCount <= 1) {\r\n      setIsInputError(true);\r\n      setInputErrorMessage(\"Please enter a >1 numeric value\");\r\n      setPlayerCount(\"\");\r\n      return;\r\n    } else {\r\n      let playerId = 0;\r\n      lodash.times(playerCount, () => {\r\n        dispatch(\r\n          addPlayers({\r\n            id: playerId,\r\n            name: \"\",\r\n            phaseCompleted: false,\r\n            actualPhase: 1,\r\n            prevActualPhase: 1,\r\n            totalPoints: 0,\r\n            prevTotalPoints: 0,\r\n            roundPoints: 0,\r\n            leader: false,\r\n            completedGame: false,\r\n          })\r\n        );\r\n        playerId++;\r\n      });\r\n      setCountSubmitted(true);\r\n    }\r\n  };\r\n\r\n  console.log(\"players state\", players);\r\n\r\n  const handleNameInput = (event) => {\r\n    console.log(\"helloNameInputHandler\");\r\n    const updatedPlayers = [...players];\r\n    console.log(\"updated players\", updatedPlayers);\r\n    console.log(event.target.dataset.idx);\r\n    console.log(event.target.value);\r\n    updatedPlayers[event.target.dataset.idx].name = event.target.value;\r\n    console.log(updatedPlayers[event.target.dataset.idx].name);\r\n    dispatch(updatePlayerName(updatedPlayers));\r\n  };\r\n\r\n  const handleNamesSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!countSubmitted) {\r\n      alert(\"You've gotta add players, dummy :)\");\r\n    } else {\r\n      dispatch(setInitialRound(players[0].name));\r\n      history.push(\"/playgame\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h2 className=\"header-title mt-3\">Let's get started!</h2>\r\n\r\n        <div className=\"init-input mt-5\">\r\n          <div className=\"d-flex flex-column bd-highlight\">\r\n            <form className=\"player-input mt-4\" onSubmit={handleCountSubmit}>\r\n              <div className=\"p-2 bd-highlight\">\r\n                {\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"playercount\"\r\n                  className=\"form-control-lg\"\r\n                  placeholder=\"No. of players\"\r\n                  value={playerCount}\r\n                  onChange={handleCountInput}\r\n                  required\r\n                />\r\n                {isInputError ? <p className=\"error-msg mt-1\">*{inputErrorMessage}</p> : null}\r\n              </div>\r\n\r\n              <div className=\"d-flex flex-row bd-highlight mt-2 justify-content-center\">\r\n                <div className=\"p-2 bd-highlight\">\r\n                  {\" \"}\r\n                  <button\r\n                    className=\"btn btn-lg btn-warning\"\r\n                    type=\"submit\"\r\n                    id=\"button-addon2\"\r\n                    onClick={handleCountSubmit}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <form className=\"player-input mt-4\" onSubmit={handleNamesSubmit}>\r\n              {countSubmitted &&\r\n                players.map((player, idx) => {\r\n                  return (\r\n                    <div key={idx} className=\"p-2 bd-highlight\">\r\n                      <input\r\n                        key={idx}\r\n                        name={idx}\r\n                        data-idx={idx}\r\n                        type=\"text\"\r\n                        alt={idx}\r\n                        className=\"form-control-lg\"\r\n                        placeholder={`Player ${idx + 1}`}\r\n                        value={players[idx].name}\r\n                        onChange={handleNameInput}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              {players.length ? (\r\n                <button className=\"btn btn-lg btn-warning mt-2\" type=\"submit\">\r\n                  Let's play!\r\n                </button>\r\n              ) : null}\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"player-names\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StartGame);\r\n","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\homepage\\homepage.comp.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\playgame\\playgame.comp.jsx",["95","96","97","98"],"import React, { useState } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./playgame.styles.css\";\r\nimport image from \"../../assets/leader-badge.png\";\r\n\r\nimport {\r\n  resetState,\r\n  roundSubmit,\r\n  gameRollback,\r\n} from \"../../redux/game/game.actions\";\r\nimport {\r\n  updatePlayerRoundPoints,\r\n  updatePlayerPhase,\r\n  endOfRoundUpdate,\r\n  newRoundSamePlayers,\r\n  playerRollback,\r\n} from \"../../redux/player/player.actions\";\r\n\r\nimport { numberOfPhases, phases } from \"../../utils/constants\";\r\n\r\nimport Header from \"../../components/header/header.comp\";\r\n\r\nconst PlayGame = () => {\r\n  const players = useSelector((state) => state.players);\r\n  const game = useSelector((state) => state.game);\r\n  const history = useHistory();\r\n\r\n  const [isInputError, setIsInputError] = useState({\r\n    isError: false,\r\n    playerId: \"\",\r\n  });\r\n\r\n  const [inputErrorMessage, setInputErrorMessage] = useState(\"\");\r\n\r\n  const [rollbackButtonEnabled, setRollbackButtonEnabled] = useState(true)\r\n\r\n  let gameCompleted = false;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePointsInput = (event) => {\r\n    const value = event.target.value;\r\n    const idx = event.target.name;\r\n    isInputError.isError && setIsInputError({ isError: false, playerId: \"\" });\r\n    if (isNaN(value)) {\r\n      setIsInputError({ isError: true, playerId: idx });\r\n      setInputErrorMessage(\"Please enter a numeric value\");\r\n      //update playerPoint to nixxx\r\n      dispatch(updatePlayerRoundPoints({ idx: idx, value: \"\" }));\r\n      return;\r\n    } else {\r\n      dispatch(updatePlayerRoundPoints({ idx: idx, value: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    updatePlayerState();\r\n\r\n    setTimeout(() => updateGameState(), 1);\r\n\r\n    setRollbackButtonEnabled(true);\r\n  };\r\n\r\n  const updatePlayerState = () => {\r\n    dispatch(endOfRoundUpdate());\r\n  };\r\n\r\n  const updateGameState = () => {\r\n    gameCompleted = checkGameCompleted();\r\n    console.log(\"updateGameState checkGameComp\", gameCompleted);\r\n    const nextGiver = givesCardsNext(game.givesCard);\r\n    dispatch(\r\n      roundSubmit({\r\n        nextGiver: nextGiver,\r\n        gameCompleted: gameCompleted,\r\n        prevGiver: game.givesCard,\r\n      })\r\n    );\r\n  };\r\n\r\n  const givesCardsNext = (actualGivesCards) => {\r\n    const actualIdx = players.findIndex(\r\n      (player) => player.name === actualGivesCards\r\n    );\r\n    const nextIdx = (actualIdx) => {\r\n      if (actualIdx === players.length - 1) {\r\n        return 0;\r\n      } else return actualIdx + 1;\r\n    };\r\n    return players[nextIdx(actualIdx)].name;\r\n  };\r\n\r\n  const handleCheckBox = (event) => {\r\n    console.log(event.target);\r\n    const playerId = event.target.name;\r\n    const actualChecked = event.target.checked;\r\n    dispatch(updatePlayerPhase({ id: playerId, value: actualChecked }));\r\n  };\r\n\r\n  const handleNewSame = () => {\r\n    dispatch(newRoundSamePlayers());\r\n    dispatch(resetState(players[0].name));\r\n  };\r\n\r\n  const checkGameCompleted = () => {\r\n    let completed = false;\r\n    players.map((player) => {\r\n      if (player.actualPhase == numberOfPhases && player.phaseCompleted) {\r\n        completed = true;\r\n        return completed;\r\n      }\r\n      return completed;\r\n    });\r\n    return completed;\r\n  };\r\n\r\n  const determineWinner = () => {\r\n    let idxWinner = 0;\r\n    let minPointAmount = 1000;\r\n    const playersCompleted = players.filter(\r\n      (player) => player.actualPhase == \"GAME COMPLETED\"\r\n    );\r\n    if (playersCompleted.length > 1) {\r\n      playersCompleted.map((player, idx) => {\r\n        if (player.totalPoints < minPointAmount) {\r\n          minPointAmount = player.totalPoints;\r\n          idxWinner = idx;\r\n        }\r\n        return minPointAmount;\r\n      });\r\n    }\r\n    return playersCompleted[idxWinner].name;\r\n  };\r\n\r\n  const handleResetWithNewPlayers = () => history.push(\"/startgame\");\r\n\r\n  const isWinner = (name) => {\r\n    if (game.completed && name == determineWinner()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const isErrorWith = (id) => {\r\n    if (isInputError.isError && id == isInputError.playerId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleRollback = () => {\r\n    dispatch(playerRollback());\r\n    dispatch(gameRollback());\r\n    setRollbackButtonEnabled(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h2 className=\"header-title mt-3\">Let's play!</h2>\r\n        {!game.completed ? (\r\n          <div>\r\n            <h2 className=\"mt-4 mb-4\">Actual round: {game.count}</h2>\r\n            <h2 className=\"mt-4 mb-4\">Mixes cards: {game.givesCard}</h2>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2 className=\"mt-4 mb-4\">GAME COMPLETED</h2>\r\n            <h2 className=\"mt-4 mb-4\">The winner is: {determineWinner()}</h2>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"playgame-form\">\r\n          <div className=\"row \">\r\n            {players.map((player, idx) => {\r\n              return (\r\n                <div className=\"col-sm-12 col-md-6 col-lg-4\" key={idx}>\r\n                  <div className=\"card text-dark bg-light mb-3\">\r\n                    <div className=\"card-header\">{player.name}</div>\r\n                    {isWinner(player.name) ? (\r\n                      <img\r\n                        src={image}\r\n                        alt=\"leader badge\"\r\n                        className=\"leader-image\"\r\n                      />\r\n                    ) : null}\r\n\r\n                    <div className=\"card-body\">\r\n                      <h6 className=\"card-title\">\r\n                        Actual phase: {player.actualPhase}\r\n                      </h6>\r\n                      <h6 className=\"card-subtitle\">\r\n                        {(player.actualPhase !== \"GAME COMPLETED\") ? (phases[player.actualPhase - 1].desc) : \"All phases checked!\"}\r\n                      </h6>\r\n                      <hr />\r\n                      <h6 className=\"card-title\">Round result</h6>\r\n                      <div className=\"mb-3 form-check\">\r\n                        <input\r\n                          name={idx}\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          id=\"exampleCheck1\"\r\n                          value={player.phaseCompleted}\r\n                          onChange={handleCheckBox}\r\n                          checked={player.phaseCompleted}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"exampleCheck1\"\r\n                        >\r\n                          Phase completed\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\" id=\"basic-addon3\">\r\n                          Points\r\n                        </span>\r\n                        <input\r\n                          key={idx}\r\n                          name={idx}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"basic-url\"\r\n                          aria-describedby=\"basic-addon3\"\r\n                          value={players[idx].roundPoints}\r\n                          onChange={handlePointsInput}\r\n                        />\r\n                      </div>\r\n                      {isErrorWith(idx) ? (\r\n                        <p className=\"error-msg\">*{inputErrorMessage}</p>\r\n                      ) : null}\r\n                      <hr />\r\n                      <h6 className=\"card-title\">\r\n                        Total points: {player.totalPoints}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {!game.completed && (\r\n            <button className=\"btn btn-lg btn-warning mt-3 mb-4\">\r\n              Submit round\r\n            </button>\r\n          )}\r\n        </form>\r\n        <button\r\n          className=\"btn btn-lg btn-outline-warning mt-1 mb-4\"\r\n          onClick={handleRollback}\r\n          disabled={rollbackButtonEnabled ? false : true}\r\n        >\r\n          Undo last round submission\r\n        </button>\r\n        <button\r\n          className=\"btn btn-lg btn-outline-primary mb-4 new-game\"\r\n          onClick={handleNewSame}\r\n        >\r\n          New game with the same players\r\n        </button>\r\n        <button\r\n          className=\"btn btn-lg btn-outline-success mb-4 new-game\"\r\n          onClick={handleResetWithNewPlayers}\r\n        >\r\n          Restart with new players\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayGame);\r\n","C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\pages\\results\\results.comp.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\components\\header\\header.comp.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\store.js",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\root-reducer.js",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.reducer.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.actions.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.selectors.jsx",[],["99","100"],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.types.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\player\\player.utils.jsx",[],["101","102"],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.reducer.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.types.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.actions.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\redux\\game\\game.utils.jsx",[],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\components\\footer\\footer.comp.jsx",[],["103","104"],"C:\\Users\\Laszlo\\Documents\\Web projects\\phase10\\src\\utils\\constants.jsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":24,"column":6,"nodeType":"111","endLine":24,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":113,"column":30,"nodeType":"115","messageId":"116","endLine":113,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":126,"column":38,"nodeType":"115","messageId":"116","endLine":126,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":143,"column":32,"nodeType":"115","messageId":"116","endLine":143,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":150,"column":36,"nodeType":"115","messageId":"116","endLine":150,"endColumn":38},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"105","replacedBy":"119"},{"ruleId":"107","replacedBy":"120"},{"ruleId":"105","replacedBy":"121"},{"ruleId":"107","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["123"],["124"],["123"],["124"],["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [dispatch]",{"range":"128","text":"129"},[630,632],"[dispatch]"]